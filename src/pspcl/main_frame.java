/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pspcl;

import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FilenameFilter;
import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JWindow;
import static javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER;
import javax.swing.border.BevelBorder;
import javax.swing.border.Border;
import javax.swing.border.EtchedBorder;

/**
 *
 * @author amandeep
 */
public class main_frame extends javax.swing.JFrame {

    ArrayList<file_detail> al1 = new ArrayList<>();
    ArrayList<JPanel> al2 = new ArrayList<>();
    int y3=0;
    String bill_date;
    waiting w;
    /**
     * Creates new form main_frame
     */
    public main_frame() {
        initComponents();
        this.setVisible(true);
       this.setSize(1184,573);
       jPanel6.setSize(1184,573);
        this.setResizable(false);
        this.setLocation(50, 50);
        updateta.setEditable(false);
        jScrollPane1.setHorizontalScrollBarPolicy(HORIZONTAL_SCROLLBAR_NEVER);
         
        
       
        Font f= updateta.getFont();
        Font f1= new Font(f.getFontName(),f.getStyle(),f.getSize()+5);
        updateta.setFont(f1);
        
        fetch_detail();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        updateta1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jpb1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        updateta = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        updatebtn = new javax.swing.JButton();
        bgcb = new javax.swing.JComboBox<>();
        cyclecb = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        uploadbtn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cash_payment_date = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cash_payment_date1 = new javax.swing.JLabel();
        e_payment_date1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        e_payment_date = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PSPCL DEFAULTING LIST GENERATOR");
        getContentPane().setLayout(null);
        getContentPane().add(updateta1);
        updateta1.setBounds(520, 220, 0, 0);

        jPanel6.setBackground(new java.awt.Color(98, 98, 98));
        jPanel6.setEnabled(false);
        jPanel6.setMinimumSize(new java.awt.Dimension(1184, 573));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PSPCL DEFAULTING LIST GENERATOR ");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        jPanel6.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 2, 440, 40));

        jpb1.setBackground(new java.awt.Color(45, 84, 94));
        jpb1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        javax.swing.GroupLayout jpb1Layout = new javax.swing.GroupLayout(jpb1);
        jpb1.setLayout(jpb1Layout);
        jpb1Layout.setHorizontalGroup(
            jpb1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 397, Short.MAX_VALUE)
        );
        jpb1Layout.setVerticalGroup(
            jpb1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 237, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jpb1);
        jpb1.getAccessibleContext().setAccessibleDescription("");

        jPanel6.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 80, 371, 194));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        updateta.setColumns(20);
        updateta.setRows(5);
        updateta.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane2.setViewportView(updateta);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
        );

        jPanel6.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 305, -1, -1));

        jPanel4.setBackground(new java.awt.Color(45, 84, 94));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Select Billing Group and Cycle for which data is required");

        updatebtn.setBackground(new java.awt.Color(45, 84, 94));
        updatebtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        updatebtn.setForeground(new java.awt.Color(255, 255, 255));
        updatebtn.setText("Update ");
        updatebtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        updatebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updatebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updatebtnMouseExited(evt);
            }
        });
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        bgcb.setBackground(new java.awt.Color(45, 84, 94));
        bgcb.setForeground(new java.awt.Color(255, 255, 255));
        bgcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BG-1", "BG-2", "BG-3", "BG-4" }));
        bgcb.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        cyclecb.setBackground(new java.awt.Color(45, 84, 94));
        cyclecb.setForeground(new java.awt.Color(255, 255, 255));
        cyclecb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cycle-1", "Cycle-2", "Cycle-3", "Cycle-4","Cycle-5","Cycle-6" }));
        cyclecb.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(bgcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(cyclecb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bgcb)
                    .addComponent(cyclecb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(572, 211, 476, -1));

        jPanel5.setBackground(new java.awt.Color(45, 84, 94));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        uploadbtn.setBackground(new java.awt.Color(45, 84, 94));
        uploadbtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        uploadbtn.setForeground(new java.awt.Color(255, 255, 255));
        uploadbtn.setText("Insert File");
        uploadbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        uploadbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                uploadbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                uploadbtnMouseExited(evt);
            }
        });
        uploadbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadbtnActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Click here to Upload the main file");
        jLabel12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(uploadbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uploadbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(572, 382, -1, -1));

        jPanel2.setBackground(new java.awt.Color(45, 84, 94));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Billing group");
        jLabel3.setAlignmentY(2.0F);
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        jLabel3.setPreferredSize(new java.awt.Dimension(99, 28));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Billing Cycle");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        jLabel4.setPreferredSize(new java.awt.Dimension(97, 28));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Billing Date");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        jLabel5.setPreferredSize(new java.awt.Dimension(91, 28));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 44, -1, -1));

        jButton1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jButton1.setText("ADMIIN");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 0, 90, 30));

        jPanel1.setBackground(new java.awt.Color(45, 84, 94));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        cash_payment_date.setBackground(new java.awt.Color(109, 121, 147));
        cash_payment_date.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cash_payment_date.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Cash-payment range");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("E-payment range");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        cash_payment_date1.setBackground(new java.awt.Color(109, 121, 147));
        cash_payment_date1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cash_payment_date1.setForeground(new java.awt.Color(255, 255, 255));

        e_payment_date1.setBackground(new java.awt.Color(109, 121, 147));
        e_payment_date1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        e_payment_date1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel9.setBackground(new java.awt.Color(109, 121, 147));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("From:");

        e_payment_date.setBackground(new java.awt.Color(109, 121, 147));
        e_payment_date.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        e_payment_date.setForeground(new java.awt.Color(255, 255, 255));

        jLabel10.setBackground(new java.awt.Color(109, 121, 147));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("To:");

        jLabel13.setBackground(new java.awt.Color(109, 121, 147));
        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("From:");

        jLabel14.setBackground(new java.awt.Color(109, 121, 147));
        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("To:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(e_payment_date1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e_payment_date, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cash_payment_date1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cash_payment_date, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cash_payment_date1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e_payment_date1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(e_payment_date, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cash_payment_date, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(572, 55, 476, -1));

        getContentPane().add(jPanel6);
        jPanel6.setBounds(0, 0, 1150, 520);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void uploadbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadbtnActionPerformed
        
        new Thread(new Runnable() {
                        public void run() {
            w= new waiting();
            updateta.append("\nPROCESSING");
            updateta.setCaretPosition(updateta.getDocument().getLength()-1);
            File directoryPath = new File(System.getProperty("user.home")+"\\Desktop\\pspcl\\webfiles");
            FilenameFilter textFilefilter = new FilenameFilter(){
                   public boolean accept(File dir, String name) {
                      String lowercaseName = name.toLowerCase();
                      if (lowercaseName.endsWith(".txt")) {
                         return true;
                      } else {
                         return false;
                      }
                   }
                };
                //List of all the text files
                String filesList[] = directoryPath.list(textFilefilter);
                w.suppress();
                if(filesList.length==0)
                {
                    updateta.append("\n No Main File found");
                    updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                    JOptionPane.showMessageDialog(updateta1,"No Main File found","ERROR",JOptionPane.ERROR_MESSAGE); 
                    return;
                }
                else if(filesList.length>1)
                {
                    updateta.append("\n More than one Files found");
                    updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                    JOptionPane.showMessageDialog(updateta1,"More than one Files found, please place only one file in folder","ERROR",JOptionPane.ERROR_MESSAGE); 
                    return;
                }
                
            String filepath=System.getProperty("user.home")+"\\Desktop\\pspcl\\webfiles\\"+filesList[0];
            
            {
            
        try{
            
            Connection con_main =new jdbcconnect().initconn();
            con_main.setAutoCommit(false);
            readandstoremainfile main_obj = new readandstoremainfile(con_main);
            
            
            w.show();
            main_obj.readmainfile(filepath);
            boolean T53= main_obj.checkaccountno();
            w.suppress();
            String update;
            if(T53)
            {   
                w.suppress();
                updateta.append("\nPROCESSING: Main file is being inserted..");
                updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                
                w.show();
                update= main_obj.setdbdate();
                w.suppress();
                updateta.append(update);
                updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                if(update=="\nData of Main File is already present in DB")
                {
                    JOptionPane.showMessageDialog(updateta1,update,"ERROR",JOptionPane.ERROR_MESSAGE);
                    w.close();
                    return;
                }
                
            }
            else
            {
                w.suppress();
                updateta.append("\nData does not belong to Butari Sub-Divison");
                updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                
                JOptionPane.showMessageDialog(updateta1,"Data does not belong to Butari Sub-Divison","ERROR",JOptionPane.ERROR_MESSAGE); 
                
            }
            w.suppress();
            updateta.append("\nFile has been uploaded");
            updateta.setCaretPosition(updateta.getDocument().getLength()-1);
            JOptionPane.showMessageDialog(updateta1,"MAIN FILE HAS BEEN INSERTED"); 
            con_main.close();
            w.suppress();
        }
        catch(Exception e)
        {
            w.suppress();
            System.out.print(e);
            updateta.append("\nError: "+e);
            
            updateta.setCaretPosition(updateta.getDocument().getLength()-1);
            w.close();
        }
        }
        
        fetch_detail();
        w.close();
         }
                    }).start();
    }//GEN-LAST:event_uploadbtnActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        new Thread(new Runnable() {
                        public void run() {
            w= new waiting();
            updateta.append("\nPROCESSING.......");
            updateta.setCaretPosition(updateta.getDocument().getLength()-1);
            
        try{
            //first check whether data of bg and cycle is there or not
            w.show();
            int bg=bgcb.getSelectedIndex();
            int cycle=cyclecb.getSelectedIndex();
            bg++;
            cycle++;
            Connection con =new jdbcconnect().initconn();
            String query="select count(*) from pspcl.agg_main_table where cycle="+cycle+" and billing_group = "+bg;
            Statement st1 = con.createStatement();
            ResultSet rs1 =st1.executeQuery(query);
            
            w.suppress();
            rs1.next();
            if(rs1.getInt(1)==0)
            {
                w.suppress();
                updateta.append("\nError: please upload data of selected BG and cycle first");
                updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                
                JOptionPane.showMessageDialog(updateta1,"PLEASE UPLOAD DATA OF SELECETED BG AND CYCLE FIRST","ERROR",JOptionPane.ERROR_MESSAGE); 
            }
            else
            {
                w.show();
                Connection con_cashpayment =new jdbcconnect().initconn();
                Connection con_epayment =new jdbcconnect().initconn();
                con_cashpayment.setAutoCommit(false);
                con_epayment.setAutoCommit(false);
                epayment_todb epayment_obj = new epayment_todb(con_epayment);
                cashtodb cashpayment_obj = new cashtodb(con_cashpayment);

                System.out.println("bg= "+bg+" cycle= "+cycle);
                boolean epaymentexist=false,cashpaymentexists=false;
                //truncate both cash and epayment basic tables
                epayment_obj.truncate_both_tables();
                
                //epayment start
                //get all epayment files name
                File directoryPath = new File(System.getProperty("user.home")+"\\Desktop\\pspcl\\epaymentfiles");
                FilenameFilter textFilefilter = new FilenameFilter(){
                   public boolean accept(File dir, String name) {
                      String lowercaseName = name.toLowerCase();
                      if (lowercaseName.endsWith(".xls")) {
                         return true;
                      } else {
                         return false;
                      }
                   }
                };
                //List of all the text files
                String filesList[] = directoryPath.list(textFilefilter);
                w.suppress();
                updateta.append("\n"+filesList.length+" Epayment files are found..");
                updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                    
//                System.out.println("List of the text files in the specified directory:");
                for(String fileName : filesList) 
                {
                   System.out.println(fileName);
                
                
                
                    String excel_dir1 = System.getProperty("user.home")+"\\Desktop\\pspcl\\epaymentfiles\\"+fileName;
                    w.suppress();
                    updateta.append("\nProcessing: "+fileName+" Epayment file is being inserted..");
                    updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                    
                    w.show();
                    String s=epayment_obj.e_paymentbasictable(excel_dir1);
                    w.suppress();
                    if(s=="true")
                    {
                        updateta.append("\nData Inserted : "+fileName);
                        updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                    }
                    else
                    {
                        updateta.append("\nERROR: "+s);
                        updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                        JOptionPane.showMessageDialog(updateta1,s); 
                    }
                
                
                } 
                if(filesList.length==0)
                {
                    w.suppress();
                    updateta.append("\nNo E-payment file exists");
                    updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                    JOptionPane.showMessageDialog(updateta1,"No E-payment file exists"); 
                }
                else
                {
                    epayment_obj.remove_duplicate();
                }
                
                
                //cashpayment start
                
                //get all epayment files name
                directoryPath = new File(System.getProperty("user.home")+"\\Desktop\\pspcl\\cashpaymentfiles");
                textFilefilter = new FilenameFilter(){
                   public boolean accept(File dir, String name) {
                      String lowercaseName = name.toLowerCase();
                      if (lowercaseName.endsWith(".txt")) {
                         return true;
                      } else {
                         return false;
                      }
                   }
                };
                //List of all the text files
                String filesList_cash[] = directoryPath.list(textFilefilter);
                w.suppress();
                updateta.append("\n"+filesList_cash.length+" Cashpayment files are found");
                updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                    
//                System.out.println("List of the text files in the specified directory:");
                for(String fileName : filesList_cash) 
                {
                    String cashfile = System.getProperty("user.home")+"\\Desktop\\pspcl\\cashpaymentfiles\\"+fileName;
                    w.suppress();
                    updateta.append("\nPROCESSING:"+fileName+" file is being inserted..");
                    updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                    
                    w.show();
                    String s=cashpayment_obj.cashfilereadtodb(cashfile);
                    w.suppress();
                    
                    if(s=="true")
                    {
                        updateta.append("\nData Inserted : "+fileName);
                        updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                    }
                    else
                    {
                        updateta.append("\nERROR: "+s);
                        updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                        JOptionPane.showMessageDialog(updateta1,s); 
                    }
                
                }
                if(filesList_cash.length==0)
                {
                    
                    w.suppress();
                    updateta.append("\nNO Cashpayment file exists");
                    updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                    
                    JOptionPane.showMessageDialog(updateta1,"No any cashpayment file exists"); 
                }
                else
                {
                    
                    cashpayment_obj.remove_duplicate();
                }
                
                w.show();
                cashpayment_obj.validatewithstoredpayment();
                w.suppress();
                   
                    w.suppress();
                    updateta.append("\nPROCESSING: DATA IS BEING PROCESSED.....");
                    updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                    
                    w.show();
                    cashpayment_obj.agg_stored_payment(0,bg,cycle);
                    
                    Connection con_main =new jdbcconnect().initconn();
                    readandstoremainfile main_obj = new readandstoremainfile(con_main);
                    //truncate and update result_table
                    main_obj.resultfile(bg, cycle);
                    new datatoexcel().worksheet(bg,cycle);
                    w.suppress();
                    updateta.append("\nExcel File is created");
                    updateta.setCaretPosition(updateta.getDocument().getLength()-1);
                    JOptionPane.showMessageDialog(updateta1,"EXCEL FILE FOR CYCLE "+cycle+" AND BILLING GROUP "+bg+" IS CREATED"); 
            
                
            
            
            
            con_main.close();
            cashpayment_obj.con_close();
            epayment_obj.con_close();
            payment_fetch(bg,cycle);
            
            }
            con.close();
            w.suppress();
        }
        catch(Exception e)
        {
            w.suppress();
            System.out.print(e);
            updateta.append("\nError: "+e);
            updateta.setCaretPosition(updateta.getDocument().getLength()-1);
            w.close();
            
        }
        
        
         w.close();}
                    }).start();
    }//GEN-LAST:event_updatebtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JPasswordField pf = new JPasswordField();
        pf.requestFocus();
        int okCxl = JOptionPane.showConfirmDialog(null, pf, "ENTER ADMIN PASSWORD", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (okCxl == JOptionPane.OK_OPTION) {
          String pass = new String(pf.getPassword());
          System.err.println("You entered: " + pass);

//    String pass=JOptionPane.showInputDialog(updateta1,"ENTER ADMIN PASSWORD"); 
    try{
        Connection con =new jdbcconnect().initconn();
        String query="select count(*) as count1 from pspcl.admin_auth where password= '"+pass+"'";
            Statement st1 = con.createStatement();
            ResultSet rs1 =st1.executeQuery(query);
            
            if(rs1.next())
            {
                if(rs1.getInt("count1")>=1)
                {
                    
                    System.out.println("admin check  "+true);
                    this.dispose();
                    new admin_form();
                    con.close();
                }
                else
            {
                JOptionPane.showMessageDialog(updateta1,"INCORRECT PASSWORD, PLEASE TRY AGAIN"); 
            }
                
            }
            
            con.close();
            
            }
            catch(Exception e)
            {
                System.out.print(e);
                updateta.append("\nError: "+e);
                updateta.setCaretPosition(updateta.getDocument().getLength()-1);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void updatebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnMouseEntered
        updatebtn.setForeground(new Color(45,84,94));
        updatebtn.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_updatebtnMouseEntered

    private void uploadbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadbtnMouseEntered
        uploadbtn.setForeground(new Color(45,84,94));
        uploadbtn.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_uploadbtnMouseEntered

    private void uploadbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadbtnMouseExited
        uploadbtn.setForeground(new Color(255,255,255));
        uploadbtn.setBackground(new Color(45,84,94));
    }//GEN-LAST:event_uploadbtnMouseExited

    private void updatebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnMouseExited
        updatebtn.setForeground(new Color(255,255,255));
        updatebtn.setBackground(new Color(45,84,94));
    }//GEN-LAST:event_updatebtnMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main_frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> bgcb;
    private javax.swing.JLabel cash_payment_date;
    private javax.swing.JLabel cash_payment_date1;
    private javax.swing.JComboBox<String> cyclecb;
    private javax.swing.JLabel e_payment_date;
    private javax.swing.JLabel e_payment_date1;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel jpb1;
    private javax.swing.JButton updatebtn;
    private javax.swing.JTextArea updateta;
    private javax.swing.JLabel updateta1;
    private javax.swing.JButton uploadbtn;
    // End of variables declaration//GEN-END:variables


void fetch_detail()
{
        y3 = 5;
        jpb1.removeAll();
        jpb1.setBounds(0, 0, jScrollPane1.getWidth(), jScrollPane1.getHeight());
        // Dimension d = jp2.getPreferredSize();
        // d.height = d.height + 200;
        jpb1.setPreferredSize(new Dimension(jpb1.getWidth(), jScrollPane1.getHeight()));
        repaint();
        al2.clear();
        al1.clear();
        try{
        Connection con = new jdbcconnect().initconn();
        
        String query="select billing_group,cycle,max(start_date) as date1 from pspcl.agg_main_table group by billing_group,cycle order by billing_group,cycle";
        Statement st1 = con.createStatement();
        ResultSet rs1 =st1.executeQuery(query);
//        con.commit();
        while(rs1.next())
        {
               al1.add(new file_detail(rs1.getInt("billing_group"),rs1.getInt("cycle"),rs1.getString("date1")));
               System.out.println(al1.size());
        }
        LocalDate olddate = LocalDate.parse(al1.get(0).date);
        payment_fetch(al1.get(0).billing_group,al1.get(0).billing_cycle);
        LocalDate newdate=olddate.minusDays(50);
        cash_payment_date1.setText(newdate+"");
        e_payment_date1.setText(newdate+"");
        System.out.println("array completed");
        printfollowing();
        con.close();
        }
        catch(Exception e){
            System.out.println(e);
            updateta.append("\nNO DATA FOUND ");
            updateta.setCaretPosition(updateta.getDocument().getLength()-1);
        }
        
        
}
void printfollowing() {
        for (int i = 0; i < al1.size(); i++) {
            
            JPanel jp = new JPanel();
            al2.add(jp);


                jp.setBackground(new Color(49, 61, 75));
            Border border;
            border = new BevelBorder(EtchedBorder.RAISED, new Color(63, 50, 80), new Color(213, 213, 213));
            jp.setBorder(border);
            jp.setLayout(null);
            jpb1.add(jp);
            JLabel lbbg = new JLabel(al1.get(i).billing_group+"");
            JLabel lbbc = new JLabel(al1.get(i).billing_cycle+"");
            JLabel lbdate = new JLabel(al1.get(i).date);
            lbbg.setForeground(Color.white);
            lbbc.setForeground(Color.white);
            lbdate.setForeground(Color.white);

            lbbg.setFont(new Font("Berlin Sans FB Demi", Font.PLAIN, 15));
            lbbc.setFont(new Font("Berlin Sans FB Demi", Font.PLAIN, 15));
            lbdate.setFont(new Font("Berlin Sans FB Demi", Font.PLAIN, 15));
            lbbg.setBorder(border);
            lbbc.setBorder(border);
            lbdate.setBorder(border);
            
            lbbg.setHorizontalAlignment(JLabel.CENTER);
            lbbc.setHorizontalAlignment(JLabel.CENTER);
            lbdate.setHorizontalAlignment(JLabel.CENTER);
            
            lbbg.setBounds(4, 5, 100, 30);
            lbbc.setBounds(106, 5, 105, 30);
            lbdate.setBounds(215, 5, 108, 30);

            jp.add(lbbg);
            jp.add(lbbc);
            jp.add(lbdate);

           
            
            jp.addMouseListener(new MouseAdapter() {            // for story photos

                @Override
                public void mouseClicked(MouseEvent e) {

                    
                    new Thread(new Runnable() {
                        public void run() {
                            
                            for(int i=0;i<al2.size();i++)
                            {
                                if(al2.get(i)==jp)
                                {
                                    al2.get(i).setBackground(new Color(98,98,98));
                                }
                                else
                                {
                                    al2.get(i).setBackground(new Color(49, 61, 75));
                                }
                            }
                            JLabel jdate= (JLabel)jp.getComponent(2);
                            String date1=jdate.getText();
                            JLabel jbg= (JLabel)jp.getComponent(0);
                            int bg=Integer.parseInt(jbg.getText());
                            JLabel jc= (JLabel)jp.getComponent(1);
                            int cycle=Integer.parseInt(jc.getText());
                            payment_fetch(bg,cycle);
                            int bg1=bg-1;
                            int cycle1=cycle-1;
                            bgcb.setSelectedIndex(bg1);
                            cyclecb.setSelectedIndex(cycle1);
                            bgcb.repaint();
                            cyclecb.repaint();
                            
                            System.out.println("bg:cycle:date"+bg+" "+cycle+" "+date1);
                           
                             LocalDate olddate = LocalDate.parse(date1);
                             LocalDate newdate=olddate.minusDays(50);
                            cash_payment_date1.setText(newdate+"");
                            e_payment_date1.setText(newdate+"");
                        }
                    }).start();
                     }
            });
            

            if (i > 4) {

                Dimension d = jpb1.getPreferredSize();
                d.height = d.height + 40;
                jpb1.setPreferredSize(d);
                jpb1.setBounds(0, 0, jScrollPane1.getWidth(), jpb1.getHeight() + 42);
                System.out.println("yes");
            }
            jp.setBounds(2, y3, jpb1.getWidth() - 2, 40);
            y3 += 40;
            System.out.println("value of y3-----" + y3);
        }
    }
                    
void payment_fetch(int bg,int cycle)
{
    try{
        Connection con = new jdbcconnect().initconn();
        
        String query="select cash_date,e_date from pspcl.payment_update where billing_group="+bg+" and cycle="+cycle;
        Statement st1 = con.createStatement();
        ResultSet rs1 =st1.executeQuery(query);
        String e_date ="";
        String cash_date="";
//        con.commit();
        if(rs1.next())
        {
            e_date=rs1.getString("e_date");
            cash_date=rs1.getString("cash_date");
        }
        e_payment_date.setText(e_date);
        cash_payment_date.setText(cash_date);
        con.close();
        
    }
        catch(Exception e)
        {
            updateta.append("\nError: "+e);
            updateta.setCaretPosition(updateta.getDocument().getLength()-1);            
        }
   
}



}



